syntax = "proto3";

package goSentinel;

option go_package ="./goSentinel";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";


message User{
    string id = 1;
    string name = 2;
    string email=3;
    string password = 4;
    string token = 5;
    string role =6;
    string isActive = 7;
}

 message Application {
    string id = 1;
    string name = 2;
    string email=3;
    string status = 4;
    string isVerified = 5;
 }
  message VerifyApplicationRequest{
    string key = 1;
  }


 message GetApplicationRequest{
    string id = 1;
 }


 message RegisterUserRequest{ 
    string name = 1;
    string email=2;
    string password = 3;
    string role = 5;
 }

 message SendApplicationNotificationRequest{
   string email = 1;
   string name = 2;
 }
 message SendApplicationNotificationResponse{
   string token = 1;
 }

 message Applicationcredentials{
   string applicationID = 1;
   string applicationSecret=2;
 }

 message GetApplicationTokenResponse{
  string token = 1;
 }

 message ApplicationSecretRequest {
  string applicationID = 1;
 }

 message LoginUserRequest {
  string email = 1;
  string password = 2;
 }

 message LoginUserResponse{
  string token = 1;
 }

 message GetUserRequest{
  string ID = 1;
  string email = 2;
 }

 message GetUserResponse{
  string ID = 1;
  string name = 2;
  string email = 3;
 }


message DeleteUserRequest{
  string ID = 1;
}

message UpdateUserRequest{
  string ID = 1;
  string name=2;
  string password=3;
}

 service goSentinelService{
    rpc SendVerifcationNotification(SendApplicationNotificationRequest) returns (SendApplicationNotificationResponse);  
    rpc VerifyApplication(VerifyApplicationRequest)returns (google.protobuf.Empty){
      option (google.api.http)={
          get: "/v1/verify/{key}"
      };
  };
  rpc GetApplicationSecret(google.protobuf.Empty)returns (Applicationcredentials){
   option (google.api.http)={
      get: "/v1/secret"
  };
  }
  rpc CreateApplicationSecret(google.protobuf.Empty)returns (google.protobuf.Empty){
    option (google.api.http)={
       post: "/v1/secret"
   };
   }

  rpc GetApplicationToken(Applicationcredentials)returns (GetApplicationTokenResponse);

  // user rpcs

  rpc RegisterUser(RegisterUserRequest) returns (google.protobuf.Empty);
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse);
  rpc GetUser(GetUserRequest)returns (GetUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);
  rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty);
  
 }


